// Given two numbers stored in the registers R0 and R1 (address 0 and 1 in RAM), (user enters R0 and R1 values)
// compute the maximum between them and store it in the R2 register.

//Assembly Code Listing File

0	0000000000000000	 @R0                // Memory address 0
1	1111110000010000	 D=M              	// D = first number (from R0)
2	0000000000000001	 @R1                // Memory address 1
3	1111010011010000	 D=D-M           	// D = first number - second number(from memory, R1)

4	0000000000001010	 @FIRST		  		// Load address to jump to base on value in D
5	1110001100000001	 D;JGT           	// if D>0 (first is greater) Jump to FIRST

6	0000000000000001	 @R1		  		// Load address of second number
7	1111110000010000	 D=M              	// D = second number, it is greater
8	0000000000001100	 @Second	  		// Load address to jump to for saving second number
9	1110101010000111	 0;JMP            	// Jump to SECOND

    (FIRST) 								// load R0 into D
A	0000000000000000	 @R0		  		// Largest number is in R0
B	1111110000010000	 D=M              	// D = load first number into D

    (Second)
C	0000000000000010	 @R2		  		// Largest number is copied to R2
D	1110001100001000	 M=D              	// M[2] = D 

    (End)
E	0000000000001110	 @End
F	1110101010000111  	 0;JMP            	// infinite loop


/////////////////////////////////
//Assembler Code (as submitted to assembler program)
/////////////////////////////////

@R0
D=M    
@R1
D=D-M  
@FIRST	
D;JGT  
@R1	
D=M    
@Second
0;JMP  	
(FIRST)
@R0	
D=M   
(SECOND) 
@R2	
M=D  
(END)  
@End
0;JMP



/////////////////////////////////
// Machine Code in Binary and HEX
/////////////////////////////////
0000000000000000	0000
1111110000010000	FC10
0000000000000001	0001
1111010011010000	F4D0
0000000000001010	000A
1110001100000001	E301
0000000000000001	0001
1111110000010000	FC10
0000000000001100	000C
1110101010000111	EA87
0000000000000000	0000
1111110000010000	FC10
0000000000000010	000A
1110001100001000	E308
0000000000001110	000E
1110101010000111	EA87